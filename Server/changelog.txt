
24.05.2025:
neuer Patient nicht vorhanden Workflow:

[Bild Updload]
Server-->Gesicht: {"Type": "AVALIBLE"}
Gesicht-->Server: {"event": "face_result", "filename": "3", "result": "Gesicht nicht erkannt"}
Server-->Smartphone: {"type":"UNKNOWN_CUSTOMER"}
[Smartphone Voice File Upload]
Spracherkennung-->Server: {"type": "EXTRACT_DATA_FROM_AUDIO_STARTING", "message": {"text": "Starting Data extraction for file person-123.wav"}}
Spracherkennung-->Server: {"type": "EXTRACT_DATA_FROM_AUDIO_SUCCESS", "message": {"text": {"firstname": "Max", "lastname": "Mustermann", "sex": "M", "date_of_birth": "1990-01-01", "phone_number": "12345", "email_address": "muster.mail.de"}}}
Server --> Smartphone: { "type":"PERSON_DATA", "success":"success", "message":{"firstname":"[firstname]","lastname":"[lastname]","sex":"[sex]","date_of_birth":"[date_of_birth]","phone_number":"[phone_number]","email_address":"[email_address]"}
Server--> Gesicht: {"action":"save"}
Gesicht--> Server: {"event": "face_result", "filename":"[id]", "result":"Gesicht gespeichert"}



08.05.2025 15:00 Uhr:
Patient vorhanden (Mit Termin) Workflow:
[Bild Updload]
Server-->Gesicht: {"type": "AVALIBLE"}
Gesicht-->Server: {"type": "AVALIBLE_ANSWER", "answer":"TRUE", "bild_id":"[id]"}
Server-->Smartphone: {"type":"Customer_Appointment"}
Server-->Roboter: {"type": "DRIVE_TO_ROOM", "Target":"[(0|1), (0|1), (0|1), (0|1)]"}
Roboter-->Server: {"type": "DRIVE_TO_ROOM_ANSWER", "Answer":"TRUE"}



04.05.2025 15:00 Uhr:
Patient vorhanden (Kein Termin) Workflow:
[Bild Updload]
Server-->Gesicht: {"Type": "AVALIBLE"}
Gesicht-->Server: {"type": "AVALIBLE_ANSWER", "answer":"TRUE", "bild_id":"[id]"}
Server-->Smartphone: {"type":"Known_Customer", "Appointment":"FALSE"}
Smartphone-->Server: {"type":"Next_Appointment"}
Server-->Smartphone: {"Date":"dd.MM.yyyy", "Time":"hh:mm", "Weekday":"mo|tu|we|th|fr|sa|so"}
Smartphone-->Server: {"type":"Next_Appointment_Success", "message":"TRUE"}



03.05.2025:
Patient nicht vorhanden Workflow:
Bild Updload
Server-->Gesicht: {"Type": "AVALIBLE"}
Gesicht-->Server: {"type": "AVALIBLE_ANSWER", "answer":"FALSE"}
Server-->Smartphone: {"type":"Unknown_Customer"}
Smartphone Voice File Upload
Spracherkennung-->Server: {"type": "EXTRACT_DATA_FROM_AUDIO_SUCCESS","message": {"text":{"sex":"M","lastname": "willis","firstname": "Bruce", "dateOfBirth":"1999-07-15", "phoneNumber":"12345 6789", "emailAddress":"example@whatever.com"}}}
Server-->Gesicht: {"Type": "NEW", "ID":"[id]"}



01.05.2025 11:30 Uhr:
Audio Gereration Workflow implementiert.

Sendet das Smartphone: {"type":"AUDIO_GENERATION_REQUEST", "Text":"[Text]"},
dann bekommt die Spracherkennung: {"type": "GENERATE_AUDIO_REQUEST","message": {"fileName":"audio.wav","text":"[Text]"}}

Anschließend bekommt das Smartphone entweder:
{"type":"AUDIO_GENERATION_REQUEST_SUCCESS"}
oder
{"type":"AUDIO_GENERATION_REQUEST_FAILURE", "message":"[Fehlermeldung]"}



01.05.2025 08:00 Uhr:
Audio Download implementiert.

Zum Download wird die Datei audio.wav im Ordner Server/download verwendet.
Das Request mit dem dem Client geantwortet wird hat auch Header zur Bennenung der Audiodatei, die je nach persönlicher Vorliebe aber ignoriert werden können.

Verwendung (über Curl):
Audio download (Verwendung der Header im Request):
curl -OJ http://localhost:3000/download/sprache
Audio download (ohne Verwendung der Header im Request, dann funktioniert aber keine Fehlerbehandlung wie Timeouts):
curl -O http://localhost:3000/download/sprache/audio.wav
